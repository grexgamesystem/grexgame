<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body>
<!-- <div class="row"> -->
<div class="col-sm-12">
<div id="demo"></div>
  <div class="message">The game is about to start</div>
  <div class="gamestatus"></div>
</div>
<!-- </div> -->

<div id="map"></div>

<% include ../partials/footer.ejs %>
<script type="text/javascript">

console.log('<%= game.location.lat %>')
console.log('<%= game.location.long %>')

var map;
function initMap() {
  // Create a map object and specify the DOM element for display.
  map = new google.maps.Map(document.getElementById('map'), {
    scrollwheel: false,
    zoom: 20,
    center: {lat: <%= game.location.lat %>, lng: <%= game.location.long %>}
  })
}
getLocation();

var id, options;
function getLocation() {
  options = {
    enableHighAccuracy: true,
    // frequency: 200,
    maximumAge: 0
  };
  if (navigator.geolocation) {
      // id = navigator.geolocation.watchPosition(success, error, options);
      navigator.geolocation.getCurrentPosition(success, error, options);
  } else { 
      $('.message').html("Geolocation is not supported by this browser.");
  }
}
var status = 0;
function success(pos) {
  // pos = pos;

  if(markers.length < 5) {
    $('.message').html('Wait or other players to join, min 5');
  } else {
    $('.message').html('Found the hidden shape');
  }

  updateGame(pos);
  // console.log(pos);
}

var markers = [], correct_confirm=0;

function updateGame(pos) {
  // if(pos.coords.accuracy < 50) {

    $.post('/api/shape/player?lat='+pos.coords.latitude+'&long='+pos.coords.longitude+'&player=<%= player %>&game=<%= game.location.id %>', function(res) {
      console.log(res);


      status = res.status;

      var distances = [], rel = []
      res.players.forEach(function(player, k) {

        if(markers[k]){
          markers[k].setPosition( new google.maps.LatLng(player.lat,player.long) )
        } else {
          markers[k] = new google.maps.Marker({
            position: { lat: parseFloat(player.lat), lng: parseFloat(player.long) },
            map: map,
            label: { text: ''+k, color: '#fff'},
            icon: '/assets/redpoint.png'
          }) 
        }
        
        rel[k] = { close: 0, mid: 0, far: 0, x: player.lat, y: player.long, id: player.id }
        res.players.forEach(function(nextPlayer, j) {
          // console.log(nextPlayer.lat, player.lat);
          if(k >= j && k != j) {
            distance = Math.sqrt(Math.pow((nextPlayer.lat - player.lat) * 6371, 2) + Math.pow((nextPlayer.long - player.long) * 6371, 2));
            distances.push({distance: distance, from: j, to: k })

            // console.log(k,j)
            if(distance < 0.3) {
              rel[k].close += 1
              rel[j].close += 1
            }
            if(distance > 0.3 && distance < 1.1) {
              rel[k].mid += 1
              rel[j].mid += 1
            }
            if(distance > 1.1) {
              rel[k].far += 1
              rel[j].far += 1
            }
          }
        })  
      })


      console.log(distances);
      console.log(rel);

      var shape='point', correct = 0;
      rel.forEach(function(piece, k) {
        if(piece.id == '<%= player %>') {
          shape = 'star'
        } else {
          shape='point'
        }

        if(piece.close > 0 || piece.mid > 2 ||  piece.mid < 2 ||  piece.far < 2 ) {
          markers[k].setIcon('/assets/'+shape+'_red.png')
        } else {
          markers[k].setIcon('/assets/'+shape+'_green.png')
          correct +=1
        }
      })

      if(correct == rel.length) {
        correct_confirm += 1
      } else {
        correct_confirm = 0
      }

      console.log(correct, correct_confirm)

      if(correct_confirm == 10) {
        $('.message').html('Great you found the hidden circle!');
        // todo make game inactive
      } else {
        setTimeout(function(){
          navigator.geolocation.getCurrentPosition(success, error, options);
        }, 100);
      }



    })

  // } else {
  //   navigator.geolocation.  (success, error, options); 
  // }

}

function error(err) {

  $('.message').html(err.message);
  console.warn('ERROR(' + err.code + '): ' + err.message);
}


</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBV19vMwMey-S6aGvB8xD1okhAYJnB_LkM&callback=initMap" async defer></script>
</body>
</html>
