<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body>
<!-- <div class="row"> -->
<div class="col-sm-12">
<div id="demo"></div>
  <div class="message">The game is about to start</div>
  <div class="gamestatus"></div>
</div>
<!-- </div> -->

<div id="map"></div>

<% include ../partials/footer.ejs %>
<script type="text/javascript">

console.log('<%= game.location.lat %>')
console.log('<%= game.location.long %>')

var map;
function initMap() {
  // Create a map object and specify the DOM element for display.
  map = new google.maps.Map(document.getElementById('map'), {
    scrollwheel: false,
    zoom: 18,
    center: {lat: <%= game.location.lat %>, lng: <%= game.location.long %>}
  })
}
getLocation();

var id, options;
function getLocation() {
  options = {
    enableHighAccuracy: true,
    // frequency: 200,
    maximumAge: 0
  };
  if (navigator.geolocation) {
      // id = navigator.geolocation.watchPosition(success, error, options);
      navigator.geolocation.getCurrentPosition(success, error, options);
  } else { 
      $('.message').html("Geolocation is not supported by this browser.");
  }
}
var status = 0;
function success(pos) {
  // pos = pos;

  $('.message').html('a');
  updateGame(pos);
  // console.log(pos);
}

var markers = [];

function updateGame(pos) {
  // if(pos.coords.accuracy < 50) {

    //no food found
      $('.message').html('a');
    $.post('/api/shape/player?lat='+pos.coords.latitude+'&long='+pos.coords.longitude+'&player=<%= player %>&game=<%= game.location.id %>', function(res) {
      console.log(res);
      $('.message').html('a');

      setTimeout(function(){
        navigator.geolocation.getCurrentPosition(success, error, options);
      }, 1000);

      status = res.status;

      var distances = []
      res.players.forEach(function(player, k) {

        if(markers[k]){
          markers[k].setPosition( new google.maps.LatLng(player.lat,player.long) )
        } else {
          markers[k] = new google.maps.Marker({
            position: { lat: parseFloat(player.lat), lng: parseFloat(player.long) },
            map: map,
            icon: '/assets/redpoint.png'
          }) 
        }

        res.players.forEach(function(nextPlayer, j) {
          // console.log(nextPlayer.lat, player.lat);
          if(k != j) {
            distance = Math.round(Math.sqrt(Math.pow((nextPlayer.lat - player.lat) * 6371, 2) + Math.pow((nextPlayer.long - player.long) * 6371, 2)), 2);
            distances.push({distance: distance, from: j, to: k })
          }
        })  
      })

      // console.log(distances);

    })

  // } else {
  //   navigator.geolocation.  (success, error, options); 
  // }

}

function error(err) {

  $('.message').html(err.message);
  console.warn('ERROR(' + err.code + '): ' + err.message);
}


</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBV19vMwMey-S6aGvB8xD1okhAYJnB_LkM&callback=initMap" async defer></script>
</body>
</html>
